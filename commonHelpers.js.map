{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst startBtnEl = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nstartBtnEl.setAttribute('disabled', '');\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n      startBtnEl.setAttribute('disabled', '');\n      return;\n    }\n    userSelectedDate = selectedDates[0];\n    startBtnEl.removeAttribute('disabled');\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nconst addLeadingZero = value => {\n  return String(value).padStart(2, '0');\n};\nconst onStartClick = () => {\n  inputEl.setAttribute('disabled', '');\n  startBtnEl.setAttribute('disabled', '');\n  const intID = setInterval(() => {\n    const timeToEnd = userSelectedDate - Date.now();\n    const timeObj = convertMs(timeToEnd);\n    daysEl.textContent = addLeadingZero(timeObj.days);\n    hoursEl.textContent = addLeadingZero(timeObj.hours);\n    minutesEl.textContent = addLeadingZero(timeObj.minutes);\n    secondsEl.textContent = addLeadingZero(timeObj.seconds);\n    if (timeToEnd < 1000) {\n      clearInterval(intID);\n      inputEl.removeAttribute('disabled');\n    }\n  }, 1000);\n};\n\nstartBtnEl.addEventListener('click', onStartClick);\n"],"names":["inputEl","startBtnEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","onStartClick","intID","timeToEnd","timeObj"],"mappings":"+IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzDJ,EAAW,aAAa,WAAY,EAAE,EACtC,IAAIK,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,IAAI,KAAQ,CAClCC,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACjB,CAAO,EACDR,EAAW,aAAa,WAAY,EAAE,EACtC,MACD,CACDK,EAAmBE,EAAc,CAAC,EAClCP,EAAW,gBAAgB,UAAU,CACtC,CACH,EAEAS,EAAUV,EAASO,CAAO,EAE1B,SAASI,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMC,EAAiBC,GACd,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAEhCC,EAAe,IAAM,CACzBnB,EAAQ,aAAa,WAAY,EAAE,EACnCC,EAAW,aAAa,WAAY,EAAE,EACtC,MAAMmB,EAAQ,YAAY,IAAM,CAC9B,MAAMC,EAAYf,EAAmB,KAAK,IAAG,EACvCgB,EAAUX,EAAUU,CAAS,EACnCnB,EAAO,YAAce,EAAeK,EAAQ,IAAI,EAChDnB,EAAQ,YAAcc,EAAeK,EAAQ,KAAK,EAClDlB,EAAU,YAAca,EAAeK,EAAQ,OAAO,EACtDjB,EAAU,YAAcY,EAAeK,EAAQ,OAAO,EAClDD,EAAY,MACd,cAAcD,CAAK,EACnBpB,EAAQ,gBAAgB,UAAU,EAErC,EAAE,GAAI,CACT,EAEAC,EAAW,iBAAiB,QAASkB,CAAY"}